STS버전 : 3.9.14
SpringFramework버전 : 5.3.18

<프로젝트 구성>
  Project Explorer에서 오른쪽 마우스 클릭
  메뉴 New - Other 클릭
    Wizard대화상자
       Spring - Spring Legacy Project 선택
        - Next버튼
        - Project name 입력
          Templates영역에서 Spring MVC Project선택
       
        - Next버튼
        - Please specify the top-level package설정
           예) com.ssafy.myapp
               최소 3개이상의 패키지 지정(일반적으로 앞에는 도메인명, 맨뒤에는 App명)
        - Finish버튼

=============================================================================
1. 프로젝트 - pom.xml
    <java-version>1.6</java-version>
      ====> <java-version>1.8</java-version>

    <org.springframework-version>3.1.1.RELEASE</org.springframework-version>
      ====> <org.springframework-version>5.3.18</org.springframework-version>
<org.springframework-version>5.3.18</org.springframework-version>
<org.aspectj-version>1.9.9.1</org.aspectj-version>
<org.slf4j-version>1.7.36</org.slf4j-version>   

   <dependency>
	<groupId>javax.servlet</groupId>
	<artifactId>servlet-api</artifactId>
	<version>2.5</version> 
	<scope>provided</scope>
   </dependency>
       ====>
  <dependency>
	<groupId>javax.servlet</groupId>
	<artifactId>javax.servlet-api</artifactId>
	<version>4.0.1</version>
	<scope>provided</scope>
  </dependency>

  <dependency>
	<groupId>javax.servlet.jsp</groupId>
	<artifactId>jsp-api</artifactId>
	<version>2.1</version>
	<scope>provided</scope>
  </dependency>
       ====>
  <dependency>
	<groupId>javax.servlet.jsp</groupId>
	<artifactId>javax.servlet.jsp-api</artifactId>
	<version>2.3.3</version>
	<scope>provided</scope>
  </dependency>		

   <dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>4.7</version>          =======> 4.13.1로 변경
	<scope>test</scope>
   </dependency>



   
   <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>2.5.1</version>      ====> 3.5.1 
      <configuration>
          <source>1.6</source>      =======>  1.8변경
          <target>1.6</target>      =======>  1.8변경
          <compilerArgument>-Xlint:all</compilerArgument>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
      </configuration>
   </plugin>

  <!--
   ==> 1.6에서 1.8로  변경한 후에 
   ==> pom.xml선택 오른쪽 마우스 클릭
   ==> 메뉴 Maven
             - Update Project.. 선택
   ==> Force Update of Snapshots/Releases 체크박스 v체크 
   ==> OK버튼 클릭
         ===> 바로 아래 2번 properties 설정할 필요 없음
   -->

2. 프로젝트 - 오른쪽마우스 - properties
    - Project Facets  : 1.6 ----> 1.8  (facet변경시 compiler 자동변경)
    - Dynamic Web Module : 2.5 ----> 4.0    
    - Java Compiler  : 1.6 ----> 1.8



######################################################################
    <!-- DB관련부분 -->
    
    <!-- MySQL 드라이버추가 -->
    <dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>8.0.28</version>
    </dependency>
    
       <!-- 스프링 JDBC연동 -->
       <dependency>
         <groupId>org.springframework</groupId>
	  <artifactId>spring-jdbc</artifactId>
	  <version>${org.springframework-version}</version>
       </dependency>
       
      <!-- MyBatis라이브러리 -->
       <dependency>
         <groupId>org.mybatis</groupId>
	  <artifactId>mybatis</artifactId>
	  <version>3.5.3</version> 
       </dependency>  <!-- mybatis.3.4.1.jar -->
       
       
       <!-- 스프링 MyBatis연동 -->
       <dependency>
         <groupId>org.mybatis</groupId>
	  <artifactId>mybatis-spring</artifactId>
	  <version>1.3.0</version>
       </dependency>
       
       <!-- 스프링 Transaction 처리 -->
       <dependency>
         <groupId>org.springframework</groupId>
	  <artifactId>spring-tx</artifactId>
	  <version>${org.springframework-version}</version>
       </dependency>    	
        
        
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
######################################################################


※  파라미터 한글처리 (web.xml) - 필터처리
    <filter>
      <filter-name>encoding</filter-name>
      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
      <init-param>
         <param-name>encoding</param-name>
         <param-value>UTF-8</param-value>
      </init-param>
    </filter>
    
    <filter-mapping>
      <filter-name>encoding</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>   